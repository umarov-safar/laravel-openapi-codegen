openapi: 3.0.3
info:
  title: Test openapi
  contact:
    name: API Support
    url: https://safar.ru/contacts
    email: eniak@info.ru
  version: 1.0.0
  description: Customers Company
servers:
  - url: /api/v1

paths:
  /users:
    get:
      summary: Retrieve all users
      x-og-controller: App\Http\Controllers\TestController@get
      x-og-route-name: getAll
      x-og-middlewares: auth,rest
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      x-og-controller: App\Http\Controllers\TestController@post
      x-og-route-name: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - required:
                    - name
                    - email
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Retrieve a user by ID
      x-og-controller: App\Http\Controllers\TestController@get
      x-og-route-name: getUser
      x-og-middlewares: auth,rest
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user by ID
      x-og-controller: App\Http\Controllers\TestController@put
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user by ID
      x-og-controller: App\Http\Controllers\TestController@delete
      x-og-route-name: deleteUser
      x-og-middlewares: auth,rest
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email